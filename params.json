{"name":"tiny-observable","tagline":"Tiny Observable for Client or Server","body":"# tiny-observable\r\n[![build status](https://secure.travis-ci.org/avoidwork/tiny-observable.svg)](http://travis-ci.org/avoidwork/tiny-observable)\r\n\r\nTiny Observable for Client or Server\r\n\r\n## Example\r\n```javascript\r\nconst observerable = require(\"tiny-observable\");\r\nlet observer = observerable();\r\n\r\n// Hooking into every click event\r\nobserver.hook(document.querySelector(\"body\"), \"click\");\r\n\r\n// Capturing events, and redirecting\r\nobserver.on(\"click\", function (ev) {\r\n  ev.preventDefault();\r\n  ev.stopPropagation();\r\n  customFunction(ev);\r\n});\r\n```\r\n\r\n## API\r\n#### dispatch(event [, ...]);\r\nDispatches an event, with optional arguments.\r\n\r\n#### hook(object, event);\r\nHooks into `object` for an event; can be an Element or Array like Object.\r\n\r\n#### off(event, id);\r\nRemoves all, or a specific listener for an event.\r\n\r\n#### on(event, handler[, id, scope])\r\nAdds a listener for an event.\r\n\r\n#### once(event, handler[, id, scope])\r\nAdds a single execution event listener for an event.\r\n\r\n#### unhook(object, event);\r\nUnhooks an event from a `object`; can be an Element or Array like Object.\r\n\r\n## License\r\nCopyright (c) 2015 Jason Mulligan\r\nLicensed under the BSD-3 license\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}