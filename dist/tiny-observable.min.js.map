{"version":3,"file":"tiny-observable.min.js","sources":["../src/constants.js","../src/observable.js"],"sourcesContent":["export const EMPTY = \"\";\r\nexport const HANDLER = () => void 0;\r\nexport const ID = () => `ob-${Math.random().toString(36).slice(2, 9)}`;\r\nexport const INVALID_ARGUMENTS = \"Invalid arguments\";\r\nexport const POSSIBLE_MEMORY_LEAK = \"`Possible memory leak, more than {{LIMIT}} listeners for event: {{EVENT}}\";\r\nexport const TOKEN_EVENT = \"{{EVENT}}\";\r\nexport const TOKEN_LIMIT = \"{{LIMIT}}\";\r\n","import {EMPTY, HANDLER, ID, INVALID_ARGUMENTS, POSSIBLE_MEMORY_LEAK, TOKEN_EVENT, TOKEN_LIMIT} from \"./constants.js\";\r\n\r\nexport class Observable {\r\n\tconstructor (arg = 10, id = crypto?.randomUUID ?? ID) {\r\n\t\tthis.id = id;\r\n\t\tthis.limit = arg;\r\n\t\tthis.listeners = new Map();\r\n\t\tthis.hooks = new WeakMap();\r\n\t}\r\n\r\n\tdispatch (ev = EMPTY, ...args) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tthis.listeners.get(ev)?.forEach(obj => obj.handler.apply(obj.scope, args));\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\thook (target = null, ev = EMPTY) {\r\n\t\tif (target === null || ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tfor (const obj of Array.isArray(target) ? target : [target]) {\r\n\t\t\tif (this.hooks.has(obj) === false) {\r\n\t\t\t\tthis.hooks.set(obj, new Map());\r\n\t\t\t}\r\n\r\n\t\t\tif (this.hooks.get(obj).has(ev) === false) {\r\n\t\t\t\tthis.hooks.get(obj).set(ev, arg => this.dispatch(ev, arg));\r\n\t\t\t}\r\n\r\n\t\t\tobj?.addEventListener(ev, this.hooks.get(obj).get(ev), false);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\toff (ev = EMPTY, id = EMPTY) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tif (id.length === 0) {\r\n\t\t\tthis.listeners.get(ev)?.clear();\r\n\t\t} else if (id.length > 0) {\r\n\t\t\tthis.listeners.get(ev)?.delete(id);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\ton (ev = EMPTY, handler = HANDLER, id = this.id(), scope = this) {\r\n\t\tif (this.listeners.has(ev) === false) {\r\n\t\t\tthis.listeners.set(ev, new Map());\r\n\t\t}\r\n\r\n\t\tif (this.listeners.get(ev).size >= this.limit) {\r\n\t\t\tthrow new Error(POSSIBLE_MEMORY_LEAK.replace(TOKEN_EVENT, ev).replace(TOKEN_LIMIT, this.limit));\r\n\t\t}\r\n\r\n\t\tthis.listeners.get(ev).set(id, {scope, handler});\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tonce (ev = \"\", handler = HANDLER, id = this.id(), scope = this) {\r\n\t\treturn this.on(ev, (...args) => {\r\n\t\t\thandler.apply(scope, args);\r\n\t\t\tthis.off(ev, id);\r\n\t\t}, id, scope);\r\n\t}\r\n\r\n\tsetMaxListeners (arg = 10) {\r\n\t\tif (isNaN(arg)) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tthis.limit = arg;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tunhook (target = null, ev = EMPTY) {\r\n\t\tif (target === null) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tfor (const arg of Array.isArray(target) ? target : [target]) {\r\n\t\t\tif (this.hooks.has(arg)) {\r\n\t\t\t\tif (ev.length > 0 && this.hooks.get(arg).has(ev)) {\r\n\t\t\t\t\targ?.removeEventListener(ev, this.hooks.get(arg).get(ev), false);\r\n\t\t\t\t\tthis.hooks.get(arg)?.delete(ev);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hooks.get(arg).forEach((v, k) => arg?.removeEventListener(k, v, false));\r\n\t\t\t\t\tthis.hooks.delete(arg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nexport function observable (arg = 10, id = crypto?.randomUUID ?? ID) {\r\n\treturn new Observable(arg, id);\r\n}\r\n"],"names":["HANDLER","ID","Math","random","toString","slice","INVALID_ARGUMENTS","Observable","constructor","arg","id","crypto","randomUUID","this","limit","listeners","Map","hooks","WeakMap","dispatch","ev","EMPTY","args","length","TypeError","get","forEach","obj","handler","apply","scope","hook","target","Array","isArray","has","set","addEventListener","off","clear","delete","on","size","Error","replace","once","setMaxListeners","isNaN","unhook","removeEventListener","v","k","observable"],"mappings":"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"}