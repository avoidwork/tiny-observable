{"version":3,"file":"tiny-observable.min.js","sources":["../src/constants.js","../src/observable.js"],"sourcesContent":["export const EMPTY = \"\";\r\nexport const HANDLER = () => void 0;\r\nexport const ID = () => `ob-${Math.random().toString(36).slice(2, 9)}`;\r\nexport const INVALID_ARGUMENTS = \"Invalid arguments\";\r\nexport const POSSIBLE_MEMORY_LEAK = \"`Possible memory leak, more than {{LIMIT}} listeners for event: {{EVENT}}\";\r\nexport const TOKEN_EVENT = \"{{EVENT}}\";\r\nexport const TOKEN_LIMIT = \"{{LIMIT}}\";\r\n","import {EMPTY, HANDLER, ID, INVALID_ARGUMENTS, POSSIBLE_MEMORY_LEAK, TOKEN_EVENT, TOKEN_LIMIT} from \"./constants.js\";\r\n\r\nexport class Observable {\r\n\tconstructor (arg = 10, id = crypto?.randomUUID ?? ID) {\r\n\t\tthis.id = id;\r\n\t\tthis.limit = arg;\r\n\t\tthis.listeners = new Map();\r\n\t\tthis.hooks = new WeakMap();\r\n\t}\r\n\r\n\taddListener (ev = EMPTY, handler = HANDLER, id = this.id(), scope = this) {\r\n\t\treturn this.on(ev, handler, id, scope);\r\n\t}\r\n\r\n\tdispatch (ev = EMPTY, ...args) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tthis.listeners.get(ev)?.forEach(obj => obj.handler.apply(obj.scope, args));\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\temit (ev = EMPTY, ...args) {\r\n\t\treturn this.dispatch(ev, ...args);\r\n\t}\r\n\r\n\teventNames () {\r\n\t\treturn Array.from(this.listeners.keys());\r\n\t}\r\n\r\n\tgetMaxListeners () {\r\n\t\treturn this.limit;\r\n\t}\r\n\r\n\tlistenerCount (ev = \"\") {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\treturn this.listeners.get(ev)?.size ?? 0;\r\n\t}\r\n\r\n\thook (target = null, ev = EMPTY) {\r\n\t\tif (target === null || ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tfor (const obj of Array.isArray(target) ? target : [target]) {\r\n\t\t\tif (this.hooks.has(obj) === false) {\r\n\t\t\t\tthis.hooks.set(obj, new Map());\r\n\t\t\t}\r\n\r\n\t\t\tif (this.hooks.get(obj).has(ev) === false) {\r\n\t\t\t\tthis.hooks.get(obj).set(ev, arg => this.dispatch(ev, arg));\r\n\t\t\t}\r\n\r\n\t\t\tobj?.addEventListener(ev, this.hooks.get(obj).get(ev), false);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\toff (ev = EMPTY, id = EMPTY) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tif (id.length === 0) {\r\n\t\t\tthis.listeners.get(ev)?.clear();\r\n\t\t} else if (id.length > 0) {\r\n\t\t\tthis.listeners.get(ev)?.delete(id);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\ton (ev = EMPTY, handler = HANDLER, id = this.id(), scope = this) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tif (this.listeners.has(ev) === false) {\r\n\t\t\tthis.listeners.set(ev, new Map());\r\n\t\t}\r\n\r\n\t\tif (this.listeners.get(ev).size >= this.limit) {\r\n\t\t\tthrow new Error(POSSIBLE_MEMORY_LEAK.replace(TOKEN_EVENT, ev).replace(TOKEN_LIMIT, this.limit));\r\n\t\t}\r\n\r\n\t\tthis.listeners.get(ev).set(id, {scope, handler});\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tonce (ev = \"\", handler = HANDLER, id = this.id(), scope = this) {\r\n\t\treturn this.on(ev, (...args) => {\r\n\t\t\thandler.apply(scope, args);\r\n\t\t\tthis.off(ev, id);\r\n\t\t}, id, scope);\r\n\t}\r\n\r\n\trawListeners (ev = EMPTY) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\treturn Array.from(this.listeners.get(ev)?.values() ?? []);\r\n\t}\r\n\r\n\r\n\tremoveAllListeners (ev = EMPTY) {\r\n\t\treturn this.off(ev);\r\n\t}\r\n\r\n\tremoveListener (ev = EMPTY, id = EMPTY) {\r\n\t\treturn this.off(ev, id);\r\n\t}\r\n\r\n\tsetMaxListeners (arg = 10) {\r\n\t\tif (isNaN(arg)) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tthis.limit = arg;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tunhook (target = null, ev = EMPTY) {\r\n\t\tif (target === null) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tfor (const arg of Array.isArray(target) ? target : [target]) {\r\n\t\t\tif (this.hooks.has(arg)) {\r\n\t\t\t\tif (ev.length > 0 && this.hooks.get(arg).has(ev)) {\r\n\t\t\t\t\targ?.removeEventListener(ev, this.hooks.get(arg).get(ev), false);\r\n\t\t\t\t\tthis.hooks.get(arg)?.delete(ev);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hooks.get(arg).forEach((v, k) => arg?.removeEventListener(k, v, false));\r\n\t\t\t\t\tthis.hooks.delete(arg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nexport function observable (arg = 10, id = crypto?.randomUUID ?? ID) {\r\n\treturn new Observable(arg, id);\r\n}\r\n"],"names":["HANDLER","ID","Math","random","toString","slice","INVALID_ARGUMENTS","Observable","constructor","arg","id","crypto","randomUUID","this","limit","listeners","Map","hooks","WeakMap","addListener","ev","EMPTY","handler","scope","on","dispatch","args","length","TypeError","get","forEach","obj","apply","emit","eventNames","Array","from","keys","getMaxListeners","listenerCount","size","hook","target","isArray","has","set","addEventListener","off","clear","delete","Error","replace","once","rawListeners","values","removeAllListeners","removeListener","setMaxListeners","isNaN","unhook","removeEventListener","v","k","observable"],"mappings":"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"}