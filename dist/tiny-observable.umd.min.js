/*!
 2023 Jason Mulligan <jason.mulligan@avoidwork.com>
 @version 2.0.0
*/
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).lru={})}(this,(function(e){"use strict";const t=()=>{},s=()=>`ob-${Math.random().toString(36).slice(2,9)}`,i="Invalid arguments";class r{constructor(e=10,t=crypto?.randomUUID??s){this.id=t,this.limit=e,this.listeners=new Map,this.hooks=new WeakMap}dispatch(e="",...t){if(0===e.length)throw new TypeError(i);return this.listeners.get(e)?.forEach((e=>e.handler.apply(e.scope,t))),this}hook(e=null,t=""){if(null===e||0===t.length)throw new TypeError(i);for(const s of Array.isArray(e)?e:[e])!1===this.hooks.has(s)&&this.hooks.set(s,new Map),!1===this.hooks.get(s).has(t)&&this.hooks.get(s).set(t,(e=>this.dispatch(t,e))),s?.addEventListener(t,this.hooks.get(s).get(t),!1);return this}off(e="",t=""){if(0===e.length)throw new TypeError(i);return 0===t.length?this.listeners.get(e)?.clear():t.length>0&&this.listeners.get(e)?.delete(t),this}on(e="",s=t,i=this.id(),r=this){if(!1===this.listeners.has(e)&&this.listeners.set(e,new Map),this.listeners.get(e).size>=this.limit)throw new Error("`Possible memory leak, more than {{LIMIT}} listeners for event: {{EVENT}}".replace("{{EVENT}}",e).replace("{{LIMIT}}",this.limit));return this.listeners.get(e).set(i,{scope:r,handler:s}),this}once(e="",s=t,i=this.id(),r=this){return this.on(e,((...t)=>{s.apply(r,t),this.off(e,i)}),i,r)}setMaxListeners(e=10){if(isNaN(e))throw new TypeError(i);return this.limit=e,this}unhook(e=null,t=""){if(null===e)throw new TypeError(i);for(const s of Array.isArray(e)?e:[e])this.hooks.has(s)&&(t.length>0&&this.hooks.get(s).has(t)?(s?.removeEventListener(t,this.hooks.get(s).get(t),!1),this.hooks.get(s)?.delete(t)):(this.hooks.get(s).forEach(((e,t)=>s?.removeEventListener(t,e,!1))),this.hooks.delete(s)));return this}}e.Observable=r,e.observable=function(e=10,t=crypto?.randomUUID??s){return new r(e,t)}}));//# sourceMappingURL=tiny-observable.umd.min.js.map
