{"version":3,"file":"tiny-observable.umd.min.js","sources":["../src/constants.js","../src/observable.js"],"sourcesContent":["export const EMPTY = \"\";\r\nexport const HANDLER = () => void 0;\r\nexport const INVALID_ARGUMENTS = \"Invalid arguments\";\r\nexport const POSSIBLE_MEMORY_LEAK = \"`Possible memory leak, more than {{LIMIT}} listeners for event: {{EVENT}}\";\r\nexport const TOKEN_EVENT = \"{{EVENT}}\";\r\nexport const TOKEN_LIMIT = \"{{LIMIT}}\";\r\n","import {\r\n\tEMPTY,\r\n\tHANDLER,\r\n\tINVALID_ARGUMENTS,\r\n\tPOSSIBLE_MEMORY_LEAK,\r\n\tTOKEN_EVENT,\r\n\tTOKEN_LIMIT\r\n} from \"./constants.js\";\r\n\r\nexport class Observable {\r\n\tconstructor (arg = 10) {\r\n\t\tthis.limit = arg;\r\n\t\tthis.listeners = new Map();\r\n\t\tthis.hooks = new WeakMap();\r\n\t}\r\n\r\n\taddListener (ev = EMPTY, handler = HANDLER, id = this.id(), scope = this) {\r\n\t\treturn this.on(ev, handler, id, scope);\r\n\t}\r\n\r\n\tdispatch (ev = EMPTY, ...args) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tthis.listeners.get(ev)?.forEach(obj => obj.handler.apply(obj.scope, args));\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\temit (ev = EMPTY, ...args) {\r\n\t\treturn this.dispatch(ev, ...args);\r\n\t}\r\n\r\n\teventNames () {\r\n\t\treturn Array.from(this.listeners.keys());\r\n\t}\r\n\r\n\tgetMaxListeners () {\r\n\t\treturn this.limit;\r\n\t}\r\n\r\n\thook (target = null, ev = EMPTY) {\r\n\t\tif (target === null || ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tfor (const obj of Array.isArray(target) ? target : [target]) {\r\n\t\t\tif (this.hooks.has(obj) === false) {\r\n\t\t\t\tthis.hooks.set(obj, new Map());\r\n\t\t\t}\r\n\r\n\t\t\tif (this.hooks.get(obj).has(ev) === false) {\r\n\t\t\t\tthis.hooks.get(obj).set(ev, arg => this.dispatch(ev, arg));\r\n\t\t\t}\r\n\r\n\t\t\tobj?.addEventListener(ev, this.hooks.get(obj).get(ev), false);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tid () {\r\n\t\treturn `observable-${Math.random().toString(36).slice(2, 9)}`;\r\n\t}\r\n\r\n\tlistenerCount (ev = \"\") {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\treturn this.listeners.get(ev)?.size ?? 0;\r\n\t}\r\n\r\n\toff (ev = EMPTY, id = EMPTY) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tif (id.length === 0) {\r\n\t\t\tthis.listeners.get(ev)?.clear();\r\n\t\t} else if (id.length > 0) {\r\n\t\t\tthis.listeners.get(ev)?.delete(id);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\ton (ev = EMPTY, handler = HANDLER, id = this.id(), scope = this) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tif (this.listeners.has(ev) === false) {\r\n\t\t\tthis.listeners.set(ev, new Map());\r\n\t\t}\r\n\r\n\t\tif (this.listeners.get(ev).size >= this.limit) {\r\n\t\t\tthrow new Error(POSSIBLE_MEMORY_LEAK.replace(TOKEN_EVENT, ev).replace(TOKEN_LIMIT, this.limit));\r\n\t\t}\r\n\r\n\t\tthis.listeners.get(ev).set(id, {scope, handler});\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tonce (ev = \"\", handler = HANDLER, id = this.id(), scope = this) {\r\n\t\t/* istanbul ignore next */\r\n\t\treturn this.on(ev, (...args) => {\r\n\t\t\thandler.apply(scope, args);\r\n\t\t\tthis.off(ev, id);\r\n\t\t}, id, scope);\r\n\t}\r\n\r\n\trawListeners (ev = EMPTY) {\r\n\t\tif (ev.length === 0) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\treturn Array.from(this.listeners.get(ev)?.values() ?? []).map(i => i.handler);\r\n\t}\r\n\r\n\r\n\tremoveAllListeners (ev = EMPTY) {\r\n\t\treturn this.off(ev);\r\n\t}\r\n\r\n\tremoveListener (ev = EMPTY, id = EMPTY) {\r\n\t\treturn this.off(ev, id);\r\n\t}\r\n\r\n\tsetMaxListeners (arg = 10) {\r\n\t\tif (isNaN(arg)) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tthis.limit = arg;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tunhook (target = null, ev = EMPTY) {\r\n\t\tif (target === null) {\r\n\t\t\tthrow new TypeError(INVALID_ARGUMENTS);\r\n\t\t}\r\n\r\n\t\tfor (const arg of Array.isArray(target) ? target : [target]) {\r\n\t\t\tif (this.hooks.has(arg)) {\r\n\t\t\t\tif (ev.length > 0 && this.hooks.get(arg).has(ev)) {\r\n\t\t\t\t\targ?.removeEventListener(ev, this.hooks.get(arg).get(ev), false);\r\n\t\t\t\t\tthis.hooks.get(arg)?.delete(ev);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hooks.get(arg).forEach((v, k) => arg?.removeEventListener(k, v, false));\r\n\t\t\t\t\tthis.hooks.delete(arg);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\nexport function observable (arg = 10) {\r\n\treturn new Observable(arg);\r\n}\r\n"],"names":["HANDLER","INVALID_ARGUMENTS","Observable","constructor","arg","this","limit","listeners","Map","hooks","WeakMap","addListener","ev","EMPTY","handler","id","scope","on","dispatch","args","length","TypeError","get","forEach","obj","apply","emit","eventNames","Array","from","keys","getMaxListeners","hook","target","isArray","has","set","addEventListener","Math","random","toString","slice","listenerCount","size","off","clear","delete","Error","replace","once","rawListeners","values","map","i","removeAllListeners","removeListener","setMaxListeners","isNaN","unhook","removeEventListener","v","k","exports","observable"],"mappings":";;;;kPAAO,MACMA,EAAU,KAAY,EACtBC,EAAoB,oBCO1B,MAAMC,EACZ,WAAAC,CAAaC,EAAM,IAClBC,KAAKC,MAAQF,EACbC,KAAKE,UAAY,IAAIC,IACrBH,KAAKI,MAAQ,IAAIC,OACjB,CAED,WAAAC,CAAaC,EAAKC,GAAOC,EAAUd,EAASe,EAAKV,KAAKU,KAAMC,EAAQX,MACnE,OAAOA,KAAKY,GAAGL,EAAIE,EAASC,EAAIC,EAChC,CAED,QAAAE,CAAUN,EAAKC,MAAUM,GACxB,GAAkB,IAAdP,EAAGQ,OACN,MAAM,IAAIC,UAAUpB,GAKrB,OAFAI,KAAKE,UAAUe,IAAIV,IAAKW,SAAQC,GAAOA,EAAIV,QAAQW,MAAMD,EAAIR,MAAOG,KAE7Dd,IACP,CAED,IAAAqB,CAAMd,EAAKC,MAAUM,GACpB,OAAOd,KAAKa,SAASN,KAAOO,EAC5B,CAED,UAAAQ,GACC,OAAOC,MAAMC,KAAKxB,KAAKE,UAAUuB,OACjC,CAED,eAAAC,GACC,OAAO1B,KAAKC,KACZ,CAED,IAAA0B,CAAMC,EAAS,KAAMrB,EAAKC,IACzB,GAAe,OAAXoB,GAAiC,IAAdrB,EAAGQ,OACzB,MAAM,IAAIC,UAAUpB,GAGrB,IAAK,MAAMuB,KAAOI,MAAMM,QAAQD,GAAUA,EAAS,CAACA,IACvB,IAAxB5B,KAAKI,MAAM0B,IAAIX,IAClBnB,KAAKI,MAAM2B,IAAIZ,EAAK,IAAIhB,MAGW,IAAhCH,KAAKI,MAAMa,IAAIE,GAAKW,IAAIvB,IAC3BP,KAAKI,MAAMa,IAAIE,GAAKY,IAAIxB,GAAIR,GAAOC,KAAKa,SAASN,EAAIR,KAGtDoB,GAAKa,iBAAiBzB,EAAIP,KAAKI,MAAMa,IAAIE,GAAKF,IAAIV,IAAK,GAGxD,OAAOP,IACP,CAED,EAAAU,GACC,MAAO,cAAcuB,KAAKC,SAASC,SAAS,IAAIC,MAAM,EAAG,IACzD,CAED,aAAAC,CAAe9B,EAAK,IACnB,GAAkB,IAAdA,EAAGQ,OACN,MAAM,IAAIC,UAAUpB,GAGrB,OAAOI,KAAKE,UAAUe,IAAIV,IAAK+B,MAAQ,CACvC,CAED,GAAAC,CAAKhC,EAAKC,GAAOE,EAAKF,IACrB,GAAkB,IAAdD,EAAGQ,OACN,MAAM,IAAIC,UAAUpB,GASrB,OANkB,IAAdc,EAAGK,OACNf,KAAKE,UAAUe,IAAIV,IAAKiC,QACd9B,EAAGK,OAAS,GACtBf,KAAKE,UAAUe,IAAIV,IAAKkC,OAAO/B,GAGzBV,IACP,CAED,EAAAY,CAAIL,EAAKC,GAAOC,EAAUd,EAASe,EAAKV,KAAKU,KAAMC,EAAQX,MAC1D,GAAkB,IAAdO,EAAGQ,OACN,MAAM,IAAIC,UAAUpB,GAOrB,IAJ+B,IAA3BI,KAAKE,UAAU4B,IAAIvB,IACtBP,KAAKE,UAAU6B,IAAIxB,EAAI,IAAIJ,KAGxBH,KAAKE,UAAUe,IAAIV,GAAI+B,MAAQtC,KAAKC,MACvC,MAAM,IAAIyC,MD/FuB,4EC+FIC,QD9Fb,YC8FkCpC,GAAIoC,QD7FtC,YC6F2D3C,KAAKC,QAKzF,OAFAD,KAAKE,UAAUe,IAAIV,GAAIwB,IAAIrB,EAAI,CAACC,QAAOF,YAEhCT,IACP,CAED,IAAA4C,CAAMrC,EAAK,GAAIE,EAAUd,EAASe,EAAKV,KAAKU,KAAMC,EAAQX,MAEzD,OAAOA,KAAKY,GAAGL,GAAI,IAAIO,KACtBL,EAAQW,MAAMT,EAAOG,GACrBd,KAAKuC,IAAIhC,EAAIG,EAAG,GACdA,EAAIC,EACP,CAED,YAAAkC,CAActC,EAAKC,IAClB,GAAkB,IAAdD,EAAGQ,OACN,MAAM,IAAIC,UAAUpB,GAGrB,OAAO2B,MAAMC,KAAKxB,KAAKE,UAAUe,IAAIV,IAAKuC,UAAY,IAAIC,KAAIC,GAAKA,EAAEvC,SACrE,CAGD,kBAAAwC,CAAoB1C,EAAKC,IACxB,OAAOR,KAAKuC,IAAIhC,EAChB,CAED,cAAA2C,CAAgB3C,EAAKC,GAAOE,EAAKF,IAChC,OAAOR,KAAKuC,IAAIhC,EAAIG,EACpB,CAED,eAAAyC,CAAiBpD,EAAM,IACtB,GAAIqD,MAAMrD,GACT,MAAM,IAAIiB,UAAUpB,GAKrB,OAFAI,KAAKC,MAAQF,EAENC,IACP,CAED,MAAAqD,CAAQzB,EAAS,KAAMrB,EAAKC,IAC3B,GAAe,OAAXoB,EACH,MAAM,IAAIZ,UAAUpB,GAGrB,IAAK,MAAMG,KAAOwB,MAAMM,QAAQD,GAAUA,EAAS,CAACA,GAC/C5B,KAAKI,MAAM0B,IAAI/B,KACdQ,EAAGQ,OAAS,GAAKf,KAAKI,MAAMa,IAAIlB,GAAK+B,IAAIvB,IAC5CR,GAAKuD,oBAAoB/C,EAAIP,KAAKI,MAAMa,IAAIlB,GAAKkB,IAAIV,IAAK,GAC1DP,KAAKI,MAAMa,IAAIlB,IAAM0C,OAAOlC,KAE5BP,KAAKI,MAAMa,IAAIlB,GAAKmB,SAAQ,CAACqC,EAAGC,IAAMzD,GAAKuD,oBAAoBE,EAAGD,GAAG,KACrEvD,KAAKI,MAAMqC,OAAO1C,KAKrB,OAAOC,IACP,EAKFyD,EAAA5D,WAAAA,EAAA4D,EAAAC,WAFO,SAAqB3D,EAAM,IACjC,OAAO,IAAIF,EAAWE,EACvB,CAAA"}